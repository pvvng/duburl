generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  username   String    @unique
  avatar     String?
  email      String?   @unique
  kakao_id   BigInt?   @unique
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  userUrls   UserUrl[]
}

model Url {
  id          Int       @id @default(autoincrement())
  originalUrl String    @unique
  shortKey    String    @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  userUrls    UserUrl[]
}

model UserUrl {
  id        Int      @id @default(autoincrement())
  nickname  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  url       Url      @relation(fields: [urlId], references: [id], onDelete: Cascade)
  userId    Int
  urlId     Int
  utms      Utm[]

  @@unique([userId, urlId])
}

model Utm {
  id        Int           @id @default(autoincrement())
  source    String
  medium    String
  campaign  String
  term      String
  content   String
  nickname  String?
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  userUrl   UserUrl       @relation(fields: [userUrlId], references: [id], onDelete: Cascade)
  userUrlId Int
  tracking  UtmTracking[]

  // 동일한 사용자는 하나의 동일 utm 생성가능
  @@unique([userUrlId, source, medium, campaign, term, content])
}

model UtmTracking {
  id             Int    @id @default(autoincrement())
  ip             String
  language       String
  platform       String
  os             String
  browser        String
  browserVersion String
  device         String
  utm            Utm    @relation(fields: [utmId], references: [id])
  utmId          Int
}
